{"version":3,"sources":["Die.js","App.js","index.js"],"names":["Die","props","styles","backgroundColor","isHeld","className","style","onClick","holdDice","value","App","React","useState","allNewDice","dice","setDice","tenzies","setTenzies","generateNewDie","Math","ceil","random","id","nanoid","newDice","i","push","useEffect","allHeld","every","die","firstValue","allSameValue","diceElements","map","oldDice","ReactDOM","render","document","getElementById"],"mappings":"mKAEe,SAASA,EAAIC,GACxB,IAAMC,EAAS,CACXC,gBAAiBF,EAAMG,OAAS,UAAY,SAEhD,OACI,qBACIC,UAAU,WACVC,MAAOJ,EACPK,QAASN,EAAMO,SAHnB,SAKI,oBAAIH,UAAU,UAAd,SAAyBJ,EAAMQ,U,2BCP5B,SAASC,IAEpB,MAAwBC,IAAMC,SAASC,KAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BJ,IAAMC,UAAS,GAA7C,mBAAOI,EAAP,KAAgBC,EAAhB,KAWA,SAASC,IACL,MAAO,CACHT,MAAOU,KAAKC,KAAqB,EAAhBD,KAAKE,UACtBjB,QAAQ,EACRkB,GAAIC,eAIZ,SAASV,IAEL,IADA,IAAMW,EAAU,GACPC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAAQE,KAAKR,KAEjB,OAAOM,EAtBXb,IAAMgB,WAAU,WACZ,IAAMC,EAAUd,EAAKe,OAAM,SAAAC,GAAG,OAAIA,EAAI1B,UAChC2B,EAAajB,EAAK,GAAGL,MACrBuB,EAAelB,EAAKe,OAAM,SAAAC,GAAG,OAAIA,EAAIrB,QAAUsB,KACjDH,GAAWI,GACXf,GAAW,KAEhB,CAACH,IA4CJ,IAAMmB,EAAenB,EAAKoB,KAAI,SAAAJ,GAAG,OAC7B,cAAC9B,EAAD,CAEIS,MAAOqB,EAAIrB,MACXL,OAAQ0B,EAAI1B,OACZI,SAAU,kBAbAc,EAaeQ,EAAIR,QAZjCP,GAAQ,SAAAoB,GAAO,OAAIA,EAAQD,KAAI,SAAAJ,GAC3B,OAAOA,EAAIR,KAAOA,EAAX,2BACCQ,GADD,IACM1B,QAAS0B,EAAI1B,SACtB0B,QAJZ,IAAkBR,IAULQ,EAAIR,OAOjB,OACI,iCACKN,GAAW,cAAC,IAAD,IACZ,oBAAIX,UAAU,QAAd,qBACA,mBAAGA,UAAU,eAAb,+GAEA,qBAAKA,UAAU,iBAAf,SACK4B,IAEL,wBACI5B,UAAU,YACVE,QAzCZ,WACQS,GAOAC,GAAW,GACXF,EAAQF,MAPRE,GAAQ,SAAAoB,GAAO,OAAIA,EAAQD,KAAI,SAAAJ,GAC3B,OAAOA,EAAI1B,OACP0B,EACAZ,WAkCR,SAIKF,EAAU,WAAa,YC/ExCoB,IAASC,OAAO,cAAC3B,EAAD,IAAS4B,SAASC,eAAe,W","file":"static/js/main.3eb137ff.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default function Die(props) {\r\n    const styles = {\r\n        backgroundColor: props.isHeld ? \"#59E391\" : \"white\"\r\n    }\r\n    return (\r\n        <div \r\n            className=\"die-face\" \r\n            style={styles}\r\n            onClick={props.holdDice}\r\n        >\r\n            <h2 className=\"die-num\">{props.value}</h2>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport Die from \"./Die\"\r\nimport {nanoid} from \"nanoid\"\r\nimport Confetti from \"react-confetti\"\r\n\r\nexport default function App() {\r\n\r\n    const [dice, setDice] = React.useState(allNewDice())\r\n    const [tenzies, setTenzies] = React.useState(false)\r\n    \r\n    React.useEffect(() => {\r\n        const allHeld = dice.every(die => die.isHeld)\r\n        const firstValue = dice[0].value\r\n        const allSameValue = dice.every(die => die.value === firstValue)\r\n        if (allHeld && allSameValue) {\r\n            setTenzies(true)\r\n        }\r\n    }, [dice])\r\n\r\n    function generateNewDie() {\r\n        return {\r\n            value: Math.ceil(Math.random() * 6),\r\n            isHeld: false,\r\n            id: nanoid()\r\n        }\r\n    }\r\n    \r\n    function allNewDice() {\r\n        const newDice = []\r\n        for (let i = 0; i < 10; i++) {\r\n            newDice.push(generateNewDie())\r\n        }\r\n        return newDice\r\n    }\r\n    \r\n/**\r\n * Challenge: Allow the user to play a new game when the\r\n * button is clicked and they've already won\r\n */\r\n    \r\n    function rollDice() {\r\n        if(!tenzies) {\r\n            setDice(oldDice => oldDice.map(die => {\r\n                return die.isHeld ? \r\n                    die :\r\n                    generateNewDie()\r\n            }))\r\n        } else {\r\n            setTenzies(false)\r\n            setDice(allNewDice())\r\n        }\r\n    }\r\n    \r\n    function holdDice(id) {\r\n        setDice(oldDice => oldDice.map(die => {\r\n            return die.id === id ? \r\n                {...die, isHeld: !die.isHeld} :\r\n                die\r\n        }))\r\n    }\r\n    \r\n    const diceElements = dice.map(die => (\r\n        <Die \r\n            key={die.id} \r\n            value={die.value} \r\n            isHeld={die.isHeld} \r\n            holdDice={() => holdDice(die.id)}\r\n        />\r\n    ))\r\n    \r\n    return (\r\n        <main>\r\n            {tenzies && <Confetti />}\r\n            <h1 className=\"title\">Tenzies</h1>\r\n            <p className=\"instructions\">Roll until all dice are the same. \r\n            Click each die to freeze it at its current value between rolls.</p>\r\n            <div className=\"dice-container\">\r\n                {diceElements}\r\n            </div>\r\n            <button \r\n                className=\"roll-dice\" \r\n                onClick={rollDice}\r\n            >\r\n                {tenzies ? \"New Game\" : \"Roll\"}\r\n            </button>\r\n        </main>\r\n    )\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}